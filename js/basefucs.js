// === MAXDANCE V2.0 - –ü–û–õ–ù–´–ô BASEFUCS.JS ===

// === –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï ===
let scheduleData = {};
let timeSlots = [];
let dayNames = [];
let typeNames = {};
let locationNames = {};
const daysCount = 7;

// –ú–∞—Å—Å–∏–≤ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –¥–ª—è —Ç–∏–ø–æ–≤ –∑–∞–Ω—è—Ç–∏–π (–Ω–µ –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã –≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ö)
const excludedTypes = [
  "bachata-advanced",
  "bachata-continuing",
  "bachata-general",
];

// –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π —É—Ä–æ–≤–Ω–µ–π (–Ω–µ–≤–∏–¥–∏–º—ã–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
const levelMapping = {
  // –ù–∞–±–æ—Ä
  –Ω–∞–±–æ—Ä: "–ù–∞–±–æ—Ä",
  "–∏–¥–µ—Ç –Ω–∞–±–æ—Ä": "–ù–∞–±–æ—Ä",
  0: "–ù–∞–±–æ—Ä",
  –æ–±—â–∏–π: "–ù–∞–±–æ—Ä",
  "–æ–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å": "–ù–∞–±–æ—Ä",

  // –ù–∞—á–∏–Ω–∞—é—â–∏–µ
  "0,2": "–ù–∞—á–∏–Ω–∞—é—â–∏–µ",
  "0,3": "–ù–∞—á–∏–Ω–∞—é—â–∏–µ",
  "0,4": "–ù–∞—á–∏–Ω–∞—é—â–∏–µ",
  "0,5": "–ù–∞—á–∏–Ω–∞—é—â–∏–µ",
  –Ω–∞—á–∏–Ω–∞—é—â–∏–µ: "–ù–∞—á–∏–Ω–∞—é—â–∏–µ",
  "–Ω–∞—á–∏–Ω–∞—é—â–∞—è –≥—Ä—É–ø–ø–∞": "–ù–∞—á–∏–Ω–∞—é—â–∏–µ",

  // –ü—Ä–æ–¥–æ–ª–∂–∞—é—â–∏–µ
  "0,6": "–ü—Ä–æ–¥–æ–ª–∂–∞—é—â–∏–µ",
  "0,7": "–ü—Ä–æ–¥–æ–ª–∂–∞—é—â–∏–µ",
  "0,8": "–ü—Ä–æ–¥–æ–ª–∂–∞—é—â–∏–µ",
  "0,8-1": "–ü—Ä–æ–¥–æ–ª–∂–∞—é—â–∏–µ",
  –ø—Ä–æ–¥–æ–ª–∂–∞—é—â–∏–µ: "–ü—Ä–æ–¥–æ–ª–∂–∞—é—â–∏–µ",

  // –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ
  1: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ",
  "1-2": "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ",
  –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ",
  "–ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –≥—Ä—É–ø–ø–∞": "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ",
  –ø—Ä–æ—Ñ–∏: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ",
  —Ö–æ—Ä–µ–æ: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ",
  –∫—É—Ä—Å: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ",
  "–±–∞–∑–æ–≤—ã–π –∫—É—Ä—Å": "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ",

  // –î–µ—Ç–∏
  –¥–µ—Ç—Å–∫–∞—è: "–î–µ—Ç–∏",
  –¥–µ—Ç–∏: "–î–µ—Ç–∏",
  "3-5 –ª–µ—Ç": "–î–µ—Ç–∏",
  "7-10 –ª–µ—Ç": "–î–µ—Ç–∏",
};

let activeFilters = {
  teachers: new Set(),
  levels: new Set(),
  types: new Set(),
  locations: new Set(),
  showMyGroupsOnly: false,
};

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ "–ú–æ–∏ –≥—Ä—É–ø–ø—ã"
let myGroups = new Set(); // –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
let isSelectMode = false; // –†–µ–∂–∏–º –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø
let tempSelectedGroups = new Set(); // –í—Ä–µ–º–µ–Ω–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã

let openFilterGroups = new Set(); // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –≥—Ä—É–ø–ø —Ñ–∏–ª—å—Ç—Ä–æ–≤
let collapsedMobileDays = new Set(); // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–≤–µ—Ä–Ω—É—Ç—ã—Ö –¥–Ω–µ–π –≤ –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
let personalScheduleData = {};
let isPersonalScheduleOpen = false;
let editingPersonalClass = null;

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
let adminPanelData = {
  scheduleClasses: [],
  classTypes: [],
  locations: [],
  teachers: [],
};
let isAdminPanelOpen = false;
let editingAdminItem = null;
let currentAdminTab = "schedule";

// === –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• –° –ë–ê–ó–´ –î–ê–ù–ù–´–• ===

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å —É—á–µ—Ç–æ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–û–ë–ù–û–í–õ–ï–ù–û)
async function loadData() {
  try {
    console.log("üì° –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...");

    let data;

    try {
      // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      data = await loadScheduleFromDatabase();
      console.log("‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö");
    } catch (dbError) {
      console.warn(
        "‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –±–∞–∑—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback –∫ JSON:",
        dbError
      );

      // Fallback –∫ JSON —Ñ–∞–π–ª—É
      const response = await fetch("./data/data.json");
      data = await response.json();
      console.log("‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ JSON —Ñ–∞–π–ª–∞");
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    scheduleData = data.schedule;
    timeSlots = data.timeSlots;
    dayNames = data.dayNames;
    typeNames = data.typeNames;
    locationNames = data.locationNames;

    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –∑–∞–≥—Ä—É–∂–∞–µ–º –µ–≥–æ –≥—Ä—É–ø–ø—ã
    if (currentUser) {
      console.log("üë§ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...");
      try {
        const userGroups = await getUserSavedGroups();
        myGroups = new Set(userGroups);
        console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${myGroups.size} –≥—Ä—É–ø–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`);
      } catch (error) {
        console.error("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥—Ä—É–ø–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", error);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –ø—É—Å—Ç—ã–º –Ω–∞–±–æ—Ä–æ–º –≥—Ä—É–ø–ø
        myGroups = new Set();
      }
    } else {
      // –î–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏—Å–ø–æ–ª—å–∑—É–µ–º –≥—Ä—É–ø–ø—ã –∏–∑ JSON (–µ—Å–ª–∏ –µ—Å—Ç—å)
      if (data.myGroups) {
        myGroups = new Set(data.myGroups);
        activeFilters.showMyGroupsOnly = true;
      } else {
        myGroups = new Set();
      }
      console.log("üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω—ã–µ –≥—Ä—É–ø–ø—ã:", myGroups.size);
    }

    return data;
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
    // –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    scheduleData = {};
    timeSlots = [];
    dayNames = [];
    typeNames = {};
    locationNames = {};
    myGroups = new Set();
  }
}

// –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
async function reloadScheduleWithAuth() {
  await loadData();
  createMyGroupsControls();
  renderFilteredSchedule();
  updateStats();
  updateFilterFab();
}

// === –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° –ó–ê–ù–Ø–¢–ò–Ø–ú–ò ===

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∫–ª—é—á–∞ –¥–ª—è –∑–∞–Ω—è—Ç–∏—è (–û–ë–ù–û–í–õ–ï–ù–û)
function getClassKey(classItem, time, day) {
  // –ï—Å–ª–∏ —É –∑–∞–Ω—è—Ç–∏—è –µ—Å—Ç—å ID –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
  if (classItem.id) {
    return `db_${classItem.id}`;
  }
  // –ò–Ω–∞—á–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  return `${classItem.name}_${classItem.level}_${classItem.teacher}_${classItem.location}_${time}_${day}`;
}

function createClassItem(classData, time, day) {
  console.log("üèóÔ∏è –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –∑–∞–Ω—è—Ç–∏—è:", classData);

  const locationClass =
    classData.location === "8 –º–∞—Ä—Ç–∞" ? "loc-8marta" : "loc-libknehta";
  const locationText = classData.location === "8 –º–∞—Ä—Ç–∞" ? "8–ú" : "–ö–õ";

  const classKey = getClassKey(classData, time, day);
  const isMyGroup = myGroups.has(classKey);

  let additionalClasses = "";
  let showStar = false;

  if (isSelectMode) {
    const isCurrentlySelected = tempSelectedGroups.has(classKey);
    if (isCurrentlySelected) {
      additionalClasses += " selected-group";
    }
  } else {
    if (isMyGroup) {
      additionalClasses += " my-group";
      showStar = true;
    }
  }

  // –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  let actionButtons = "";
  if (currentUser && !isSelectMode) {
    const safeClassData = JSON.stringify(classData).replace(/"/g, "&quot;");
    actionButtons = `
      <div class="class-actions">
        <button class="add-to-personal-btn" 
                onclick="event.stopPropagation(); addToPersonalSchedule(${safeClassData}, '${time}', ${day})"
                title="–î–æ–±–∞–≤–∏—Ç—å –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ">
          ‚ûï
        </button>
      </div>
    `;
  }

  // –ö–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω–∞
  let adminButtons = "";
  if (isAdmin() && !isSelectMode && classData.id) {
    adminButtons = `
      <div class="admin-actions">
        <button class="edit-class-btn" 
                onclick="event.stopPropagation(); editScheduleClassQuick(${classData.id})"
                title="–ë—ã—Å—Ç—Ä–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ">
          ‚úèÔ∏è
        </button>
        <button class="delete-class-btn" 
                onclick="event.stopPropagation(); deleteScheduleClassQuick(${classData.id})"
                title="–£–¥–∞–ª–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ">
          üóëÔ∏è
        </button>
      </div>
    `;
  }

  const clickHandler = isSelectMode
    ? `handleMyGroupsSelection(${JSON.stringify(classData).replace(
        /"/g,
        "&quot;"
      )}, '${time}', ${day}, this)`
    : `showClassDetails('${classData.name}', '${classData.level}', '${classData.teacher}', '${classData.location}')`;

  const result = `
    <div class="class-item ${
      classData.type
    }${additionalClasses}" onclick="${clickHandler}">
      ${showStar ? '<div class="my-group-star">‚≠ê</div>' : ""}
      <div class="class-location ${locationClass}">${locationText}</div>
      <div class="class-name">${classData.name}</div>
      <div class="class-level">${classData.level}</div>
      <div class="class-teacher">${classData.teacher}</div>
      ${actionButtons}
      ${adminButtons}
    </div>
  `;

  console.log("‚úÖ HTML —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–æ–∑–¥–∞–Ω");
  return result;
}

// === –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° –ü–ï–†–°–û–ù–ê–õ–¨–ù–´–ú –†–ê–°–ü–ò–°–ê–ù–ò–ï–ú ===

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
async function addToPersonalSchedule(classData, time, day) {
  if (!currentUser) {
    showNotification(
      "–í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏–π –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ",
      "error"
    );
    return;
  }

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –ª–∏ —É–∂–µ —ç—Ç–æ –∑–∞–Ω—è—Ç–∏–µ
    const personalClasses = await getUserPersonalClasses();
    const duplicate = personalClasses.find(
      (pc) =>
        pc.name === classData.name &&
        pc.day_of_week === day &&
        pc.time_slot === time &&
        pc.teacher === classData.teacher
    );

    if (duplicate) {
      showNotification(
        `–ó–∞–Ω—è—Ç–∏–µ "${classData.name}" —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –≤–∞—à–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ`,
        "info"
      );
      return;
    }

    await addClassToPersonal(classData, time, day);
    showNotification(
      `‚úÖ –ó–∞–Ω—è—Ç–∏–µ "${classData.name}" –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ!`,
      "success"
    );

    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    await reloadScheduleWithAuth();
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:", error);
    showNotification(
      "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–Ω—è—Ç–∏—è: " + error.message,
      "error"
    );
  }
}

// === –ë–´–°–¢–†–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–û–í ===

// –ë—ã—Å—Ç—Ä–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
async function editScheduleClassQuick(classId) {
  if (!isAdmin()) {
    showNotification(
      "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω: —Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
      "error"
    );
    return;
  }

  try {
    // –ù–∞–π–¥–µ–º –∑–∞–Ω—è—Ç–∏–µ –≤ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    let classToEdit = null;
    Object.values(scheduleData).forEach((timeData) => {
      Object.values(timeData).forEach((dayClasses) => {
        const found = dayClasses.find((c) => c.id === classId);
        if (found) classToEdit = found;
      });
    });

    if (!classToEdit) {
      showNotification("–ó–∞–Ω—è—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ", "error");
      return;
    }

    // –ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const newName = prompt("–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è:", classToEdit.name);
    if (newName === null) return; // –û—Ç–º–µ–Ω–∞

    const newLevel = prompt("–£—Ä–æ–≤–µ–Ω—å:", classToEdit.level);
    if (newLevel === null) return;

    const newTeacher = prompt("–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å:", classToEdit.teacher);
    if (newTeacher === null) return;

    if (!newName.trim()) {
      showNotification("–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º", "error");
      return;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–Ω—è—Ç–∏–µ
    const updatedClass = await updateScheduleClass(classId, {
      name: newName.trim(),
      level: newLevel.trim(),
      teacher: newTeacher.trim(),
      type: classToEdit.type,
      location: classToEdit.location,
      day_of_week: classToEdit.day_of_week || 0,
      time_slot: classToEdit.time_slot || "19:00",
    });

    showNotification(`‚úÖ –ó–∞–Ω—è—Ç–∏–µ "${updatedClass.name}" –æ–±–Ω–æ–≤–ª–µ–Ω–æ!`, "success");
    await reloadScheduleWithAuth();
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è:", error);
    showNotification(
      "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–Ω—è—Ç–∏—è: " + error.message,
      "error"
    );
  }
}

// –ë—ã—Å—Ç—Ä–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è
async function deleteScheduleClassQuick(classId) {
  if (!isAdmin()) {
    showNotification(
      "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω: —Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
      "error"
    );
    return;
  }

  if (!classId) {
    showNotification("‚ùå –û—à–∏–±–∫–∞: ID –∑–∞–Ω—è—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω", "error");
    return;
  }

  // –ù–∞–π–¥–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  let className = "–∑–∞–Ω—è—Ç–∏–µ";
  Object.values(scheduleData).forEach((timeData) => {
    Object.values(timeData).forEach((dayClasses) => {
      const found = dayClasses.find((c) => c.id === classId);
      if (found) className = found.name;
    });
  });

  if (!confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ "${className}"?`)) {
    return;
  }

  try {
    await deleteScheduleClass(classId);
    showNotification(`‚úÖ –ó–∞–Ω—è—Ç–∏–µ "${className}" —É–¥–∞–ª–µ–Ω–æ!`, "success");
    await reloadScheduleWithAuth();
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è:", error);
    showNotification("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–Ω—è—Ç–∏—è: " + error.message, "error");
  }
}

// === –ò–ù–¢–ï–†–§–ï–ô–° –ü–ï–†–°–û–ù–ê–õ–¨–ù–û–ì–û –†–ê–°–ü–ò–°–ê–ù–ò–Ø ===

// –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ (–û–ë–ù–û–í–õ–ï–ù–û)
async function showPersonalSchedule() {
  if (!currentUser) {
    showNotification(
      "–í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–º—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é",
      "error"
    );
    return;
  }

  try {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è
    const personalClasses = await getUserPersonalClasses();
    personalScheduleData = organizePersonalSchedule(personalClasses);

    // –°–æ–∑–¥–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    createPersonalScheduleModal();
    isPersonalScheduleOpen = true;

    console.log("üìÖ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:", error);
    showNotification("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è", "error");
  }
}

// –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
function organizePersonalSchedule(classes) {
  const organized = {};

  classes.forEach((classItem) => {
    const time = classItem.time_slot;
    const day = classItem.day_of_week;

    if (!organized[time]) {
      organized[time] = {};
    }

    if (!organized[time][day]) {
      organized[time][day] = [];
    }

    organized[time][day].push(classItem);
  });

  return organized;
}

// –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
function createPersonalScheduleModal() {
  // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –µ—Å—Ç—å
  const existingModal = document.getElementById("personal-schedule-modal");
  if (existingModal) {
    existingModal.remove();
  }

  const modal = document.createElement("div");
  modal.id = "personal-schedule-modal";
  modal.className = "personal-schedule-modal";

  modal.innerHTML = `
    <div class="personal-schedule-content">
      <div class="personal-schedule-header">
        <h2>üìÖ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ</h2>
        <button class="personal-schedule-close" onclick="closePersonalSchedule()">√ó</button>
      </div>
      
      <div class="personal-schedule-tabs">
        <button class="personal-tab active" data-tab="schedule" onclick="switchPersonalTab('schedule')">
          üìã –ú–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        </button>
        <button class="personal-tab" data-tab="add" onclick="switchPersonalTab('add')">
          ‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ
        </button>
      </div>
      
      <div class="personal-schedule-body">
        <div id="personal-tab-schedule" class="personal-tab-content active">
          ${renderPersonalScheduleGrid()}
        </div>
        
        <div id="personal-tab-add" class="personal-tab-content">
          ${renderAddClassForm()}
        </div>
      </div>
    </div>
  `;

  document.body.appendChild(modal);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
  setTimeout(() => {
    modal.classList.add("active");
  }, 10);
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å–µ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
function renderPersonalScheduleGrid() {
  if (Object.keys(personalScheduleData).length === 0) {
    return `
      <div class="personal-schedule-empty">
        <div class="empty-icon">üìÖ</div>
        <h3>–í–∞—à–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—É—Å—Ç–æ</h3>
        <p>–î–æ–±–∞–≤—å—Ç–µ –∑–∞–Ω—è—Ç–∏—è –∏–∑ –æ–±—â–µ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ</p>
        <button class="personal-btn personal-btn-primary" onclick="switchPersonalTab('add')">
          ‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ
        </button>
      </div>
    `;
  }

  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã
  const allTimeSlots = [
    ...new Set([...Object.keys(personalScheduleData), ...timeSlots]),
  ].sort((a, b) => {
    const timeA = parseInt(a.split(":")[0]) * 60 + parseInt(a.split(":")[1]);
    const timeB = parseInt(b.split(":")[0]) * 60 + parseInt(b.split(":")[1]);
    return timeA - timeB;
  });

  let html = `
    <div class="personal-schedule-grid">
      <div class="personal-schedule-table">
        <table>
          <thead>
            <tr>
              <th>–í—Ä–µ–º—è</th>
              ${dayNames.map((day) => `<th>${day}</th>`).join("")}
            </tr>
          </thead>
          <tbody>
  `;

  allTimeSlots.forEach((time) => {
    html += `<tr>`;
    html += `<td class="personal-time-cell">${time}</td>`;

    for (let day = 0; day < 7; day++) {
      html += `<td class="personal-class-cell">`;

      if (personalScheduleData[time] && personalScheduleData[time][day]) {
        html += personalScheduleData[time][day]
          .map((classItem) => renderPersonalClassItem(classItem))
          .join("");
      } else {
        html += `<div class="personal-empty-cell">‚Äî</div>`;
      }

      html += `</td>`;
    }

    html += `</tr>`;
  });

  html += `
          </tbody>
        </table>
      </div>
      
      <div class="personal-schedule-stats">
        <div class="personal-stat">
          <span class="personal-stat-number">${getTotalPersonalClasses()}</span>
          <span class="personal-stat-label">–í—Å–µ–≥–æ –∑–∞–Ω—è—Ç–∏–π</span>
        </div>
        <div class="personal-stat">
          <span class="personal-stat-number">${getUniquePersonalDays()}</span>
          <span class="personal-stat-label">–î–Ω–µ–π –≤ –Ω–µ–¥–µ–ª—é</span>
        </div>
        <div class="personal-stat">
          <span class="personal-stat-number">${getPersonalHoursPerWeek()}</span>
          <span class="personal-stat-label">–ß–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é</span>
        </div>
      </div>
    </div>
  `;

  return html;
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è
function renderPersonalClassItem(classItem) {
  return `
    <div class="personal-class-item ${classItem.type || "personal"}">
      <div class="personal-class-name">${classItem.name}</div>
      <div class="personal-class-level">${classItem.level}</div>
      <div class="personal-class-teacher">${classItem.teacher}</div>
      ${
        classItem.location
          ? `<div class="personal-class-location">${classItem.location}</div>`
          : ""
      }
      
      <div class="personal-class-actions">
        <button class="personal-action-btn edit" onclick="editPersonalClass(${
          classItem.id
        })" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
          ‚úèÔ∏è
        </button>
        <button class="personal-action-btn delete" onclick="deletePersonalClass(${
          classItem.id
        })" title="–£–¥–∞–ª–∏—Ç—å">
          üóëÔ∏è
        </button>
      </div>
    </div>
  `;
}

// –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è
function renderAddClassForm() {
  const isEditing = editingPersonalClass !== null;
  const classData = isEditing
    ? editingPersonalClass
    : {
        name: "",
        level: "",
        teacher: "",
        location: "",
        day_of_week: 0,
        time_slot: "19:00",
        type: "personal",
      };

  return `
    <div class="personal-add-form">
      <h3>${
        isEditing ? "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–Ω—è—Ç–∏–µ" : "‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ"
      }</h3>
      
      <form id="personal-class-form" onsubmit="savePersonalClass(event)">
        <div class="personal-form-row">
          <div class="personal-form-group">
            <label class="personal-form-label">–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è *</label>
            <input type="text" id="personal-name" class="personal-form-input" 
                   value="${
                     classData.name
                   }" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ë–∞—á–∞—Ç–∞" required>
          </div>
          
          <div class="personal-form-group">
            <label class="personal-form-label">–£—Ä–æ–≤–µ–Ω—å</label>
            <input type="text" id="personal-level" class="personal-form-input" 
                   value="${
                     classData.level
                   }" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –Ω–∞—á–∏–Ω–∞—é—â–∏–µ">
          </div>
        </div>
        
        <div class="personal-form-row">
          <div class="personal-form-group">
            <label class="personal-form-label">–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å</label>
            <input type="text" id="personal-teacher" class="personal-form-input" 
                   value="${classData.teacher}" placeholder="–ò–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è">
          </div>
          
          <div class="personal-form-group">
            <label class="personal-form-label">–õ–æ–∫–∞—Ü–∏—è</label>
            <select id="personal-location" class="personal-form-select">
              <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ª–æ–∫–∞—Ü–∏—é</option>
              <option value="8 –º–∞—Ä—Ç–∞" ${
                classData.location === "8 –º–∞—Ä—Ç–∞" ? "selected" : ""
              }>
                —É–ª. 8 –ú–∞—Ä—Ç–∞ (–ú—ã—Ç–Ω—ã–π –î–≤–æ—Ä)
              </option>
              <option value="–ª–∏–±–∫–Ω–µ—Ö—Ç–∞" ${
                classData.location === "–ª–∏–±–∫–Ω–µ—Ö—Ç–∞" ? "selected" : ""
              }>
                —É–ª. –ö.–õ–∏–±–∫–Ω–µ—Ö—Ç–∞ (–ö–æ–Ω—Å—É–ª)
              </option>
              <option value="–¥–æ–º–∞" ${
                classData.location === "–¥–æ–º–∞" ? "selected" : ""
              }>
                –î–æ–º–∞ (–æ–Ω–ª–∞–π–Ω)
              </option>
              <option value="–¥—Ä—É–≥–æ–µ" ${
                classData.location === "–¥—Ä—É–≥–æ–µ" ? "selected" : ""
              }>
                –î—Ä—É–≥–æ–µ –º–µ—Å—Ç–æ
              </option>
            </select>
          </div>
        </div>
        
        <div class="personal-form-row">
          <div class="personal-form-group">
            <label class="personal-form-label">–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏ *</label>
            <select id="personal-day" class="personal-form-select" required>
              ${dayNames
                .map(
                  (day, index) =>
                    `<option value="${index}" ${
                      classData.day_of_week == index ? "selected" : ""
                    }>${day}</option>`
                )
                .join("")}
            </select>
          </div>
          
          <div class="personal-form-group">
            <label class="personal-form-label">–í—Ä–µ–º—è *</label>
            <select id="personal-time" class="personal-form-select" required>
              ${generateTimeOptions(classData.time_slot)}
            </select>
          </div>
        </div>
        
        <div class="personal-form-group">
          <label class="personal-form-label">–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è</label>
          <select id="personal-type" class="personal-form-select">
            <option value="personal" ${
              classData.type === "personal" ? "selected" : ""
            }>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ</option>
            <option value="group" ${
              classData.type === "group" ? "selected" : ""
            }>–ì—Ä—É–ø–ø–æ–≤–æ–µ</option>
            <option value="online" ${
              classData.type === "online" ? "selected" : ""
            }>–û–Ω–ª–∞–π–Ω</option>
            <option value="practice" ${
              classData.type === "practice" ? "selected" : ""
            }>–ü—Ä–∞–∫—Ç–∏–∫–∞</option>
          </select>
        </div>
        
        <div class="personal-form-actions">
          <button type="button" class="personal-btn personal-btn-secondary" onclick="cancelEditPersonalClass()">
            –û—Ç–º–µ–Ω–∞
          </button>
          <button type="submit" class="personal-btn personal-btn-primary">
            ${isEditing ? "üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è" : "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ"}
          </button>
        </div>
      </form>
    </div>
  `;
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø—Ü–∏–π –≤—Ä–µ–º–µ–Ω–∏
function generateTimeOptions(selectedTime = "") {
  const times = [];
  for (let hour = 8; hour <= 23; hour++) {
    for (let minute of ["00", "30"]) {
      const timeStr = `${hour.toString().padStart(2, "0")}:${minute}`;
      times.push(
        `<option value="${timeStr}" ${
          selectedTime === timeStr ? "selected" : ""
        }>${timeStr}</option>`
      );
    }
  }
  return times.join("");
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
function switchPersonalTab(tabName) {
  // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
  document.querySelectorAll(".personal-tab").forEach((tab) => {
    tab.classList.remove("active");
  });
  document.querySelector(`[data-tab="${tabName}"]`).classList.add("active");

  // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
  document.querySelectorAll(".personal-tab-content").forEach((content) => {
    content.classList.remove("active");
  });
  document.getElementById(`personal-tab-${tabName}`).classList.add("active");

  // –ï—Å–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≤–∫–ª–∞–¥–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  if (tabName === "add" && !editingPersonalClass) {
    updateAddForm();
  }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è
async function savePersonalClass(event) {
  event.preventDefault();

  const formData = {
    name: document.getElementById("personal-name").value.trim(),
    level: document.getElementById("personal-level").value.trim(),
    teacher: document.getElementById("personal-teacher").value.trim(),
    location: document.getElementById("personal-location").value,
    day_of_week: parseInt(document.getElementById("personal-day").value),
    time_slot: document.getElementById("personal-time").value,
    type: document.getElementById("personal-type").value,
  };

  if (!formData.name) {
    showNotification("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è", "error");
    return;
  }

  try {
    if (editingPersonalClass) {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –∑–∞–Ω—è—Ç–∏–µ
      await updatePersonalClass(editingPersonalClass.id, formData);
      showNotification("–ó–∞–Ω—è—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!", "success");
      editingPersonalClass = null;
    } else {
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ
      await createPersonalClass(formData);
      showNotification("–ó–∞–Ω—è—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ!", "success");
    }

    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    const personalClasses = await getUserPersonalClasses();
    personalScheduleData = organizePersonalSchedule(personalClasses);

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    document.getElementById("personal-tab-schedule").innerHTML =
      renderPersonalScheduleGrid();

    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    document.getElementById("personal-class-form").reset();
    switchPersonalTab("schedule");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è:", error);
    showNotification("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è: " + error.message, "error");
  }
}

// –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è
async function editPersonalClass(classId) {
  try {
    const personalClasses = await getUserPersonalClasses();
    editingPersonalClass = personalClasses.find((c) => c.id === classId);

    if (!editingPersonalClass) {
      showNotification("–ó–∞–Ω—è—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ", "error");
      return;
    }

    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ä–º—É
    switchPersonalTab("add");
    updateAddForm();
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–Ω—è—Ç–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:", error);
    showNotification("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–Ω—è—Ç–∏—è", "error");
  }
}

// –£–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è
async function deletePersonalClass(classId) {
  if (!confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ –∑–∞–Ω—è—Ç–∏–µ?")) {
    return;
  }

  try {
    await window.deletePersonalClass(classId);
    showNotification("–ó–∞–Ω—è—Ç–∏–µ —É–¥–∞–ª–µ–Ω–æ", "success");

    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    const personalClasses = await getUserPersonalClasses();
    personalScheduleData = organizePersonalSchedule(personalClasses);

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    document.getElementById("personal-tab-schedule").innerHTML =
      renderPersonalScheduleGrid();
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è:", error);
    showNotification("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è: " + error.message, "error");
  }
}

// –û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function cancelEditPersonalClass() {
  editingPersonalClass = null;
  switchPersonalTab("schedule");
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
function updateAddForm() {
  document.getElementById("personal-tab-add").innerHTML = renderAddClassForm();
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
function closePersonalSchedule() {
  const modal = document.getElementById("personal-schedule-modal");
  if (modal) {
    modal.classList.remove("active");
    setTimeout(() => {
      modal.remove();
      isPersonalScheduleOpen = false;
      editingPersonalClass = null;
    }, 300);
  }
}

// –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
function getTotalPersonalClasses() {
  let total = 0;
  Object.values(personalScheduleData).forEach((timeData) => {
    Object.values(timeData).forEach((dayClasses) => {
      total += dayClasses.length;
    });
  });
  return total;
}

function getUniquePersonalDays() {
  const days = new Set();
  Object.values(personalScheduleData).forEach((timeData) => {
    Object.keys(timeData).forEach((day) => {
      days.add(day);
    });
  });
  return days.size;
}

function getPersonalHoursPerWeek() {
  return getTotalPersonalClasses(); // –ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ, –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å
}

// === –ò–ù–¢–ï–†–§–ï–ô–° –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–ò ===

// –ü–æ–∫–∞–∑–∞—Ç—å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å (–û–ë–ù–û–í–õ–ï–ù–û)
async function showAdminPanel() {
  if (!isAdmin()) {
    showNotification(
      "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω: —Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
      "error"
    );
    return;
  }

  try {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    await loadAdminPanelData();

    // –°–æ–∑–¥–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    createAdminPanelModal();
    isAdminPanelOpen = true;

    console.log("‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –æ—Ç–∫—Ä—ã—Ç–∞");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏:", error);
    showNotification("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏", "error");
  }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
async function loadAdminPanelData() {
  try {
    // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –±–µ–∑ JOIN –∫ user_profiles
    const { data: scheduleClasses, error: scheduleError } = await supabase
      .from("schedule_classes")
      .select("*")
      .order("day_of_week", { ascending: true })
      .order("time_slot", { ascending: true });

    if (scheduleError) throw scheduleError;

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ —É–ø—Ä–æ—â–µ–Ω–Ω–æ
    const { data: classTypes, error: typesError } = await supabase
      .from("class_types")
      .select("*")
      .order("sort_order", { ascending: true });

    const { data: locations, error: locationsError } = await supabase
      .from("locations")
      .select("*")
      .order("sort_order", { ascending: true });

    const { data: teachers, error: teachersError } = await supabase
      .from("teachers")
      .select("*")
      .order("sort_order", { ascending: true });

    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü –Ω–µ—Ç
    adminPanelData = {
      scheduleClasses: scheduleClasses || [],
      classTypes: classTypes || [],
      locations: locations || [],
      teachers: teachers || [],
    };

    console.log("‚úÖ –î–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã", adminPanelData);
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏:", error);
    // –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–º–µ—Å—Ç–æ –ø–∞–¥–µ–Ω–∏—è
    adminPanelData = {
      scheduleClasses: [],
      classTypes: [],
      locations: [],
      teachers: [],
    };
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
function createAdminPanelModal() {
  // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –µ—Å—Ç—å
  const existingModal = document.getElementById("admin-panel-modal");
  if (existingModal) {
    existingModal.remove();
  }

  const modal = document.createElement("div");
  modal.id = "admin-panel-modal";
  modal.className = "admin-panel-modal";

  modal.innerHTML = `
    <div class="admin-panel-content">
      <div class="admin-panel-header">
        <h2>‚öôÔ∏è –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h2>
        <div class="admin-panel-user">
          <span class="admin-indicator">–ê–î–ú–ò–ù</span>
          <span class="admin-user-name">${
            userProfile?.full_name || currentUser?.email
          }</span>
        </div>
        <button class="admin-panel-close" onclick="closeAdminPanel()">√ó</button>
      </div>
      
      <div class="admin-panel-tabs">
        <button class="admin-tab active" data-tab="schedule" onclick="switchAdminTab('schedule')">
          üìã –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        </button>
        <button class="admin-tab" data-tab="references" onclick="switchAdminTab('references')">
          üìö –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏
        </button>
        <button class="admin-tab" data-tab="analytics" onclick="switchAdminTab('analytics')">
          üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
        </button>
        <button class="admin-tab" data-tab="settings" onclick="switchAdminTab('settings')">
          ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
        </button>
      </div>
      
      <div class="admin-panel-body">
        <div id="admin-tab-schedule" class="admin-tab-content active">
          ${renderScheduleManagement()}
        </div>
        
        <div id="admin-tab-references" class="admin-tab-content">
          ${renderReferencesManagement()}
        </div>
        
        <div id="admin-tab-analytics" class="admin-tab-content">
          ${renderAnalytics()}
        </div>
        
        <div id="admin-tab-settings" class="admin-tab-content">
          ${renderSettings()}
        </div>
      </div>
    </div>
  `;

  document.body.appendChild(modal);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
  setTimeout(() => {
    modal.classList.add("active");
  }, 10);
}

// === –£–ü–†–ê–í–õ–ï–ù–ò–ï –†–ê–°–ü–ò–°–ê–ù–ò–ï–ú ===

function renderScheduleManagement() {
  return `
    <div class="admin-section">
      <div class="admin-section-header">
        <h3>üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—â–∏–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º</h3>
        <button class="admin-btn admin-btn-primary" onclick="showAddClassForm()">
          ‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ
        </button>
      </div>
      
      <div class="admin-filters">
        <select id="admin-filter-day" onchange="filterAdminSchedule()" class="admin-form-select">
          <option value="">–í—Å–µ –¥–Ω–∏</option>
          ${dayNames
            .map((day, index) => `<option value="${index}">${day}</option>`)
            .join("")}
        </select>
        
        <select id="admin-filter-type" onchange="filterAdminSchedule()" class="admin-form-select">
          <option value="">–í—Å–µ —Ç–∏–ø—ã</option>
          ${adminPanelData.classTypes
            .map(
              (type) =>
                `<option value="${type.id}">${type.display_name}</option>`
            )
            .join("")}
        </select>
        
        <select id="admin-filter-location" onchange="filterAdminSchedule()" class="admin-form-select">
          <option value="">–í—Å–µ –ª–æ–∫–∞—Ü–∏–∏</option>
          ${adminPanelData.locations
            .map(
              (loc) => `<option value="${loc.id}">${loc.display_name}</option>`
            )
            .join("")}
        </select>
        
        <select id="admin-filter-status" onchange="filterAdminSchedule()" class="admin-form-select">
          <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
          <option value="true">–ê–∫—Ç–∏–≤–Ω—ã–µ</option>
          <option value="false">–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ</option>
        </select>
      </div>
      
      <div class="admin-schedule-table-container">
        ${renderScheduleTable()}
      </div>
    </div>
  `;
}

function renderScheduleTable() {
  const filteredClasses = getFilteredScheduleClasses();

  return `
    <table class="admin-table">
      <thead>
        <tr>
          <th>–î–µ–Ω—å</th>
          <th>–í—Ä–µ–º—è</th>
          <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
          <th>–£—Ä–æ–≤–µ–Ω—å</th>
          <th>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å</th>
          <th>–¢–∏–ø</th>
          <th>–õ–æ–∫–∞—Ü–∏—è</th>
          <th>–°—Ç–∞—Ç—É—Å</th>
          <th>–î–µ–π—Å—Ç–≤–∏—è</th>
        </tr>
      </thead>
      <tbody>
        ${filteredClasses
          .map(
            (classItem) => `
          <tr class="${!classItem.is_active ? "inactive-row" : ""}">
            <td>${dayNames[classItem.day_of_week]}</td>
            <td>${classItem.time_slot}</td>
            <td><strong>${classItem.name}</strong></td>
            <td><span class="level-badge">${classItem.level}</span></td>
            <td>${classItem.teacher}</td>
            <td>${getTypeDisplayName(classItem.type)}</td>
            <td>${getLocationDisplayName(classItem.location)}</td>
            <td>
              <span class="status-badge ${
                classItem.is_active ? "active" : "inactive"
              }">
                ${classItem.is_active ? "–ê–∫—Ç–∏–≤–Ω–æ" : "–ù–µ–∞–∫—Ç–∏–≤–Ω–æ"}
              </span>
            </td>
            <td>
              <div class="admin-table-actions">
                <button class="admin-table-btn admin-table-btn-edit" 
                        onclick="editScheduleClassAdmin(${classItem.id})" 
                        title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                  ‚úèÔ∏è
                </button>
                <button class="admin-table-btn admin-table-btn-toggle" 
                        onclick="toggleScheduleClassStatus(${
                          classItem.id
                        }, ${!classItem.is_active})" 
                        title="${
                          classItem.is_active
                            ? "–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å"
                            : "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å"
                        }">
                  ${classItem.is_active ? "üî¥" : "üü¢"}
                </button>
                <button class="admin-table-btn admin-table-btn-delete" 
                        onclick="deleteScheduleClassAdmin(${classItem.id})" 
                        title="–£–¥–∞–ª–∏—Ç—å">
                  üóëÔ∏è
                </button>
              </div>
            </td>
          </tr>
        `
          )
          .join("")}
      </tbody>
    </table>
    
    <div class="admin-table-stats">
      <span>–í—Å–µ–≥–æ –∑–∞–Ω—è—Ç–∏–π: <strong>${
        adminPanelData.scheduleClasses.length
      }</strong></span>
      <span>–ü–æ–∫–∞–∑–∞–Ω–æ: <strong>${filteredClasses.length}</strong></span>
      <span>–ê–∫—Ç–∏–≤–Ω—ã—Ö: <strong>${
        adminPanelData.scheduleClasses.filter((c) => c.is_active).length
      }</strong></span>
    </div>
  `;
}

// === –£–ü–†–ê–í–õ–ï–ù–ò–ï –°–ü–†–ê–í–û–ß–ù–ò–ö–ê–ú–ò ===

function renderReferencesManagement() {
  return `
    <div class="admin-section">
      <div class="admin-references-tabs">
        <button class="admin-ref-tab active" data-ref="types" onclick="switchReferenceTab('types')">
          üíÉ –¢–∏–ø—ã –∑–∞–Ω—è—Ç–∏–π
        </button>
        <button class="admin-ref-tab" data-ref="locations" onclick="switchReferenceTab('locations')">
          üìç –õ–æ–∫–∞—Ü–∏–∏
        </button>
        <button class="admin-ref-tab" data-ref="teachers" onclick="switchReferenceTab('teachers')">
          üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏
        </button>
      </div>
      
      <div class="admin-references-content">
        <div id="admin-ref-types" class="admin-ref-content active">
          ${renderClassTypesTable()}
        </div>
        
        <div id="admin-ref-locations" class="admin-ref-content">
          ${renderLocationsTable()}
        </div>
        
        <div id="admin-ref-teachers" class="admin-ref-content">
          ${renderTeachersTable()}
        </div>
      </div>
    </div>
  `;
}

function renderClassTypesTable() {
  return `
    <div class="admin-ref-section">
      <div class="admin-section-header">
        <h3>üíÉ –¢–∏–ø—ã –∑–∞–Ω—è—Ç–∏–π</h3>
        <button class="admin-btn admin-btn-primary" onclick="showAddClassTypeForm()">
          ‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–∏–ø
        </button>
      </div>
      
      <table class="admin-table">
        <thead>
          <tr>
            <th>ID</th>
            <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
            <th>–û–ø–∏—Å–∞–Ω–∏–µ</th>
            <th>–¶–≤–µ—Ç</th>
            <th>–ü–æ—Ä—è–¥–æ–∫</th>
            <th>–°—Ç–∞—Ç—É—Å</th>
            <th>–î–µ–π—Å—Ç–≤–∏—è</th>
          </tr>
        </thead>
        <tbody>
          ${adminPanelData.classTypes
            .map(
              (type) => `
            <tr class="${!type.is_active ? "inactive-row" : ""}">
              <td><code>${type.id}</code></td>
              <td><strong>${type.display_name}</strong></td>
              <td>${type.description || "‚Äî"}</td>
              <td>
                <div class="color-indicator" style="background-color: ${
                  type.color_code || "#f39c12"
                }"></div>
                ${type.color_code || "‚Äî"}
              </td>
              <td>${type.sort_order}</td>
              <td>
                <span class="status-badge ${
                  type.is_active ? "active" : "inactive"
                }">
                  ${type.is_active ? "–ê–∫—Ç–∏–≤–µ–Ω" : "–ù–µ–∞–∫—Ç–∏–≤–µ–Ω"}
                </span>
              </td>
              <td>
                <div class="admin-table-actions">
                  <button class="admin-table-btn admin-table-btn-edit" 
                          onclick="editClassType('${type.id}')" 
                          title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                    ‚úèÔ∏è
                  </button>
                  <button class="admin-table-btn admin-table-btn-delete" 
                          onclick="deleteClassType('${type.id}')" 
                          title="–£–¥–∞–ª–∏—Ç—å">
                    üóëÔ∏è
                  </button>
                </div>
              </td>
            </tr>
          `
            )
            .join("")}
        </tbody>
      </table>
    </div>
  `;
}

function renderLocationsTable() {
  return `
    <div class="admin-ref-section">
      <div class="admin-section-header">
        <h3>üìç –õ–æ–∫–∞—Ü–∏–∏</h3>
        <button class="admin-btn admin-btn-primary" onclick="showAddLocationForm()">
          ‚ûï –î–æ–±–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é
        </button>
      </div>
      
      <table class="admin-table">
        <thead>
          <tr>
            <th>ID</th>
            <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
            <th>–ü–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å</th>
            <th>–ü–æ—Ä—è–¥–æ–∫</th>
            <th>–°—Ç–∞—Ç—É—Å</th>
            <th>–î–µ–π—Å—Ç–≤–∏—è</th>
          </tr>
        </thead>
        <tbody>
          ${adminPanelData.locations
            .map(
              (location) => `
            <tr class="${!location.is_active ? "inactive-row" : ""}">
              <td><code>${location.id}</code></td>
              <td><strong>${location.display_name}</strong></td>
              <td>${location.full_address || "‚Äî"}</td>
              <td>${location.sort_order}</td>
              <td>
                <span class="status-badge ${
                  location.is_active ? "active" : "inactive"
                }">
                  ${location.is_active ? "–ê–∫—Ç–∏–≤–Ω–∞" : "–ù–µ–∞–∫—Ç–∏–≤–Ω–∞"}
                </span>
              </td>
              <td>
                <div class="admin-table-actions">
                  <button class="admin-table-btn admin-table-btn-edit" 
                          onclick="editLocation('${location.id}')" 
                          title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                    ‚úèÔ∏è
                  </button>
                  <button class="admin-table-btn admin-table-btn-delete" 
                          onclick="deleteLocation('${location.id}')" 
                          title="–£–¥–∞–ª–∏—Ç—å">
                    üóëÔ∏è
                  </button>
                </div>
              </td>
            </tr>
          `
            )
            .join("")}
        </tbody>
      </table>
    </div>
  `;
}

function renderTeachersTable() {
  return `
    <div class="admin-ref-section">
      <div class="admin-section-header">
        <h3>üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏</h3>
        <button class="admin-btn admin-btn-primary" onclick="showAddTeacherForm()">
          ‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
        </button>
      </div>
      
      <table class="admin-table">
        <thead>
          <tr>
            <th>ID</th>
            <th>–ü–æ–ª–Ω–æ–µ –∏–º—è</th>
            <th>–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏</th>
            <th>–ü–æ—Ä—è–¥–æ–∫</th>
            <th>–°—Ç–∞—Ç—É—Å</th>
            <th>–î–µ–π—Å—Ç–≤–∏—è</th>
          </tr>
        </thead>
        <tbody>
          ${adminPanelData.teachers
            .map(
              (teacher) => `
            <tr class="${!teacher.is_active ? "inactive-row" : ""}">
              <td><code>${teacher.id}</code></td>
              <td><strong>${teacher.full_name}</strong></td>
              <td>
                ${
                  teacher.specializations
                    ? teacher.specializations
                        .map(
                          (spec) =>
                            `<span class="specialization-badge">${getTypeDisplayName(
                              spec
                            )}</span>`
                        )
                        .join(" ")
                    : "‚Äî"
                }
              </td>
              <td>${teacher.sort_order}</td>
              <td>
                <span class="status-badge ${
                  teacher.is_active ? "active" : "inactive"
                }">
                  ${teacher.is_active ? "–ê–∫—Ç–∏–≤–µ–Ω" : "–ù–µ–∞–∫—Ç–∏–≤–µ–Ω"}
                </span>
              </td>
              <td>
                <div class="admin-table-actions">
                  <button class="admin-table-btn admin-table-btn-edit" 
                          onclick="editTeacher(${teacher.id})" 
                          title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                    ‚úèÔ∏è
                  </button>
                  <button class="admin-table-btn admin-table-btn-delete" 
                          onclick="deleteTeacher(${teacher.id})" 
                          title="–£–¥–∞–ª–∏—Ç—å">
                    üóëÔ∏è
                  </button>
                </div>
              </td>
            </tr>
          `
            )
            .join("")}
        </tbody>
      </table>
    </div>
  `;
}

// === –ê–ù–ê–õ–ò–¢–ò–ö–ê ===

function renderAnalytics() {
  const stats = calculateAnalytics();

  return `
    <div class="admin-section">
      <h3>üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
      
      <div class="admin-analytics-grid">
        <div class="admin-analytics-card">
          <div class="analytics-number">${stats.totalClasses}</div>
          <div class="analytics-label">–í—Å–µ–≥–æ –∑–∞–Ω—è—Ç–∏–π</div>
        </div>
        
        <div class="admin-analytics-card">
          <div class="analytics-number">${stats.activeClasses}</div>
          <div class="analytics-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π</div>
        </div>
        
        <div class="admin-analytics-card">
          <div class="analytics-number">${stats.uniqueTeachers}</div>
          <div class="analytics-label">–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π</div>
        </div>
        
        <div class="admin-analytics-card">
          <div class="analytics-number">${stats.classTypes}</div>
          <div class="analytics-label">–¢–∏–ø–æ–≤ –∑–∞–Ω—è—Ç–∏–π</div>
        </div>
        
        <div class="admin-analytics-card">
          <div class="analytics-number">${stats.locations}</div>
          <div class="analytics-label">–õ–æ–∫–∞—Ü–∏–π</div>
        </div>
        
        <div class="admin-analytics-card">
          <div class="analytics-number">${stats.weeklyHours}</div>
          <div class="analytics-label">–ß–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é</div>
        </div>
      </div>
      
      <div class="admin-analytics-charts">
        <div class="analytics-chart">
          <h4>üìä –ó–∞–Ω—è—Ç–∏—è –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏</h4>
          <div class="chart-bars">
            ${dayNames
              .map((day, index) => {
                const count = stats.classesByDay[index] || 0;
                const maxCount = Math.max(...Object.values(stats.classesByDay));
                const height = maxCount > 0 ? (count / maxCount) * 100 : 0;
                return `
                <div class="chart-bar">
                  <div class="bar-fill" style="height: ${height}%"></div>
                  <div class="bar-label">${day.substring(0, 2)}</div>
                  <div class="bar-count">${count}</div>
                </div>
              `;
              })
              .join("")}
          </div>
        </div>
        
        <div class="analytics-chart">
          <h4>üíÉ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–∏–ø—ã –∑–∞–Ω—è—Ç–∏–π</h4>
          <div class="chart-list">
            ${Object.entries(stats.classesByType)
              .sort(([, a], [, b]) => b - a)
              .slice(0, 5)
              .map(
                ([type, count]) => `
                <div class="chart-list-item">
                  <span class="chart-item-label">${getTypeDisplayName(
                    type
                  )}</span>
                  <span class="chart-item-count">${count}</span>
                </div>
              `
              )
              .join("")}
          </div>
        </div>
      </div>
    </div>
  `;
}

// === –ù–ê–°–¢–†–û–ô–ö–ò ===

function renderSettings() {
  return `
    <div class="admin-section">
      <h3>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã</h3>
      
      <div class="admin-settings-grid">
        <div class="admin-settings-card">
          <h4>üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è</h4>
          <p>–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã</p>
          <button class="admin-btn admin-btn-primary" onclick="refreshSystemData()">
            üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
          </button>
        </div>
        
        <div class="admin-settings-card">
          <h4>üì§ –≠–∫—Å–ø–æ—Ä—Ç</h4>
          <p>–≠–∫—Å–ø–æ—Ä—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö</p>
          <div class="admin-settings-buttons">
            <button class="admin-btn admin-btn-secondary" onclick="exportSchedule('json')">
              üìÑ JSON
            </button>
            <button class="admin-btn admin-btn-secondary" onclick="exportSchedule('csv')">
              üìä CSV
            </button>
          </div>
        </div>
        
        <div class="admin-settings-card">
          <h4>üîê –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞</h4>
          <p>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏</p>
          <button class="admin-btn admin-btn-secondary" onclick="manageAdmins()">
            üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏
          </button>
        </div>
        
        <div class="admin-settings-card">
          <h4>üßπ –û—á–∏—Å—Ç–∫–∞</h4>
          <p>–£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</p>
          <button class="admin-btn admin-btn-danger" onclick="cleanupInactiveData()">
            üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
          </button>
        </div>
      </div>
      
      <div class="admin-system-info">
        <h4>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ</h4>
        <div class="system-info-grid">
          <div>–í–µ—Ä—Å–∏—è —Å–∏—Å—Ç–µ–º—ã: <code>2.0.0</code></div>
          <div>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: <code>Supabase PostgreSQL</code></div>
          <div>–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: <code>${new Date().toLocaleString(
            "ru-RU"
          )}</code></div>
          <div>–¢–µ–∫—É—â–∏–π –∞–¥–º–∏–Ω: <code>${
            userProfile?.full_name || currentUser?.email
          }</code></div>
        </div>
      </div>
    </div>
  `;
}

// === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–ò ===

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
function switchAdminTab(tabName) {
  currentAdminTab = tabName;

  // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
  document.querySelectorAll(".admin-tab").forEach((tab) => {
    tab.classList.remove("active");
  });
  document.querySelector(`[data-tab="${tabName}"]`).classList.add("active");

  // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
  document.querySelectorAll(".admin-tab-content").forEach((content) => {
    content.classList.remove("active");
  });
  document.getElementById(`admin-tab-${tabName}`).classList.add("active");
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
function switchReferenceTab(refName) {
  // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
  document.querySelectorAll(".admin-ref-tab").forEach((tab) => {
    tab.classList.remove("active");
  });
  document.querySelector(`[data-ref="${refName}"]`).classList.add("active");

  // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
  document.querySelectorAll(".admin-ref-content").forEach((content) => {
    content.classList.remove("active");
  });
  document.getElementById(`admin-ref-${refName}`).classList.add("active");
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
function closeAdminPanel() {
  const modal = document.getElementById("admin-panel-modal");
  if (modal) {
    modal.classList.remove("active");
    setTimeout(() => {
      modal.remove();
      isAdminPanelOpen = false;
      editingAdminItem = null;
    }, 300);
  }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
function getTypeDisplayName(typeId) {
  const type = adminPanelData.classTypes.find((t) => t.id === typeId);
  return type ? type.display_name : typeId;
}

function getLocationDisplayName(locationId) {
  const location = adminPanelData.locations.find((l) => l.id === locationId);
  return location ? location.display_name : locationId;
}

function getFilteredScheduleClasses() {
  const dayFilter = document.getElementById("admin-filter-day")?.value;
  const typeFilter = document.getElementById("admin-filter-type")?.value;
  const locationFilter = document.getElementById(
    "admin-filter-location"
  )?.value;
  const statusFilter = document.getElementById("admin-filter-status")?.value;

  return adminPanelData.scheduleClasses.filter((classItem) => {
    if (dayFilter && classItem.day_of_week.toString() !== dayFilter)
      return false;
    if (typeFilter && classItem.type !== typeFilter) return false;
    if (locationFilter && classItem.location !== locationFilter) return false;
    if (statusFilter && classItem.is_active.toString() !== statusFilter)
      return false;
    return true;
  });
}

function calculateAnalytics() {
  const classes = adminPanelData.scheduleClasses;

  return {
    totalClasses: classes.length,
    activeClasses: classes.filter((c) => c.is_active).length,
    uniqueTeachers: new Set(classes.map((c) => c.teacher)).size,
    classTypes: adminPanelData.classTypes.length,
    locations: adminPanelData.locations.length,
    weeklyHours: classes.filter((c) => c.is_active).length, // –ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ
    classesByDay: classes.reduce((acc, c) => {
      acc[c.day_of_week] = (acc[c.day_of_week] || 0) + 1;
      return acc;
    }, {}),
    classesByType: classes.reduce((acc, c) => {
      acc[c.type] = (acc[c.type] || 0) + 1;
      return acc;
    }, {}),
  };
}

// === –°–ò–°–¢–ï–ú–ê –£–í–ï–î–û–ú–õ–ï–ù–ò–ô ===

function showNotification(message, type = "info", duration = 3000) {
  // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  const existingNotifications = document.querySelectorAll(".notification");
  existingNotifications.forEach((notification) => notification.remove());

  const notification = document.createElement("div");
  notification.className = `notification ${type}`;
  notification.textContent = message;

  document.body.appendChild(notification);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  setTimeout(() => {
    notification.style.animation = "slideOutRight 0.3s ease-out";
    setTimeout(() => {
      if (notification.parentNode) {
        notification.parentNode.removeChild(notification);
      }
    }, 300);
  }, duration);
}

// === –û–°–¢–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –†–ê–°–ü–ò–°–ê–ù–ò–Ø ===

// –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
function extractAllData() {
  const teachers = new Set();
  const levels = new Set();
  const types = new Set();
  const locations = new Set();

  Object.values(scheduleData).forEach((timeData) => {
    Object.values(timeData).forEach((dayClasses) => {
      dayClasses.forEach((classItem) => {
        // –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Å–µ—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
        const teacherList = classItem.teacher
          .split(/[,/]|\s–∏\s/)
          .map((t) => t.trim());
        teacherList.forEach((teacher) => teachers.add(teacher));

        // –ú–∞–ø–ø–∏–Ω–≥ —É—Ä–æ–≤–Ω–µ–π —á–µ—Ä–µ–∑ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫
        const mappedLevel =
          levelMapping[classItem.level.toLowerCase()] || classItem.level;
        levels.add(mappedLevel);

        types.add(classItem.type);
        locations.add(classItem.location);
      });
    });
  });

  return { teachers, levels, types, locations };
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤
function createFilterButtons(container, items, filterType) {
  container.innerHTML = "";
  [...items].sort().forEach((item) => {
    const button = document.createElement("button");
    button.className = "filter-button";
    button.textContent = item;
    button.onclick = () => toggleFilter(filterType, item, button);
    container.appendChild(button);
  });
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞
function toggleFilter(filterType, value, button) {
  if (activeFilters[filterType].has(value)) {
    activeFilters[filterType].delete(value);
    button.classList.remove("active");
  } else {
    activeFilters[filterType].add(value);
    button.classList.add("active");
  }
  renderFilteredSchedule();
  updateStats();
  updateFilterFab();
}

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞ "–ú–æ–∏ –≥—Ä—É–ø–ø—ã" (–û–ë–ù–û–í–õ–ï–ù–û)
function createMyGroupsControls() {
  const container = document.getElementById("myGroupsFilters");
  container.innerHTML = "";

  // –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É-–ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å
  const toggleButton = document.createElement("button");
  toggleButton.id = "my-groups-toggle";
  toggleButton.className = "filter-button my-groups-main-toggle";

  // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const groupsText =
    currentUser && userProfile
      ? `‚≠ê –ú–æ–∏ –≥—Ä—É–ø–ø—ã (${myGroups.size})`
      : `‚≠ê –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –º–æ–∏ –≥—Ä—É–ø–ø—ã (${myGroups.size})`;
  toggleButton.textContent = groupsText;

  if (activeFilters.showMyGroupsOnly) {
    toggleButton.classList.add("active");
  }
  toggleButton.onclick = toggleMyGroupsFilter;

  container.appendChild(toggleButton);

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–º—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö)
  if (currentUser) {
    const personalScheduleButton = document.createElement("button");
    personalScheduleButton.className = "filter-button personal-schedule-btn";
    personalScheduleButton.textContent = "üìÖ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ";
    personalScheduleButton.onclick = showPersonalSchedule;
    container.appendChild(personalScheduleButton);
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
  if (isAdmin()) {
    const adminPanelButton = document.createElement("button");
    adminPanelButton.className = "filter-button admin-panel-btn";
    adminPanelButton.textContent = "‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å";
    adminPanelButton.onclick = showAdminPanel;
    container.appendChild(adminPanelButton);
  }

  // –ï—Å–ª–∏ –Ω–µ—Ç –≥—Ä—É–ø–ø, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (myGroups.size === 0) {
    const message = document.createElement("div");
    message.className = "no-groups-message";
    message.textContent = currentUser
      ? "–ì—Ä—É–ø–ø—ã –Ω–µ –≤—ã–±—Ä–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è."
      : "–ì—Ä—É–ø–ø—ã –Ω–µ –≤—ã–±—Ä–∞–Ω—ã. –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.";
    container.appendChild(message);
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–µ–Ω —Ä–µ–∂–∏–º –≤—ã–±–æ—Ä–∞
  if (isSelectMode) {
    showMyGroupsInstructions();
  }
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ "–ú–æ–∏ –≥—Ä—É–ø–ø—ã"
function toggleMyGroupsFilter() {
  activeFilters.showMyGroupsOnly = !activeFilters.showMyGroupsOnly;
  const button = document.getElementById("my-groups-toggle");
  if (activeFilters.showMyGroupsOnly) {
    button.classList.add("active");
  } else {
    button.classList.remove("active");
  }
  renderFilteredSchedule();
  updateStats();
  updateFilterFab();
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ñ–∏–ª—å—Ç—Ä–∞–º
function matchesFilters(classItem, time, day) {
  // –§–∏–ª—å—Ç—Ä "–ú–æ–∏ –≥—Ä—É–ø–ø—ã"
  if (activeFilters.showMyGroupsOnly) {
    const classKey = getClassKey(classItem, time, day);
    if (!myGroups.has(classKey)) {
      return false;
    }
  }

  // –§–∏–ª—å—Ç—Ä –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
  if (activeFilters.teachers.size > 0) {
    const teacherList = classItem.teacher
      .split(/[,/]|\s–∏\s/)
      .map((t) => t.trim());
    const hasMatchingTeacher = teacherList.some((teacher) =>
      activeFilters.teachers.has(teacher)
    );
    if (!hasMatchingTeacher) {
      return false;
    }
  }

  // –§–∏–ª—å—Ç—Ä —É—Ä–æ–≤–Ω–µ–π
  if (activeFilters.levels.size > 0) {
    const mappedLevel =
      levelMapping[classItem.level.toLowerCase()] || classItem.level;
    if (!activeFilters.levels.has(mappedLevel)) {
      return false;
    }
  }

  // –§–∏–ª—å—Ç—Ä —Ç–∏–ø–æ–≤
  if (activeFilters.types.size > 0) {
    if (!activeFilters.types.has(classItem.type)) {
      return false;
    }
  }

  // –§–∏–ª—å—Ç—Ä –ª–æ–∫–∞—Ü–∏–π
  if (activeFilters.locations.size > 0) {
    if (!activeFilters.locations.has(classItem.location)) {
      return false;
    }
  }

  return true;
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
function renderFilteredSchedule() {
  const isMobile = window.innerWidth <= 768;

  if (isMobile) {
    renderMobileSchedule();
  } else {
    renderDesktopSchedule();
  }
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞
function renderDesktopSchedule() {
  const scheduleContainer = document.getElementById("schedule");
  scheduleContainer.innerHTML = "";

  console.log("üñ•Ô∏è –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...");
  console.log("–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞–π–¥–µ–Ω:", !!scheduleContainer);
  console.log("–í—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤:", timeSlots.length);
  console.log("–î–∞–Ω–Ω—ã—Ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:", Object.keys(scheduleData).length);

  // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
  const table = document.createElement("table");
  table.className = "schedule-table";

  // –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
  const thead = document.createElement("thead");
  const headerRow = document.createElement("tr");
  headerRow.innerHTML = `<th class="time-header">–í—Ä–µ–º—è</th>`;

  dayNames.forEach((day, index) => {
    const th = document.createElement("th");
    th.className = "day-header";
    th.textContent = day;
    headerRow.appendChild(th);
  });

  thead.appendChild(headerRow);
  table.appendChild(thead);

  // –°–æ–∑–¥–∞–µ–º —Ç–µ–ª–æ —Ç–∞–±–ª–∏—Ü—ã
  const tbody = document.createElement("tbody");

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Å–ª–æ—Ç
  timeSlots.forEach((time) => {
    console.log(`‚è∞ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Ä–µ–º—è ${time}:`, scheduleData[time]);

    const row = document.createElement("tr");
    row.className = "time-row";

    // –Ø—á–µ–π–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
    const timeCell = document.createElement("td");
    timeCell.className = "time-cell";
    timeCell.textContent = time;
    row.appendChild(timeCell);

    // –Ø—á–µ–π–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è
    for (let day = 0; day < 7; day++) {
      const dayCell = document.createElement("td");
      dayCell.className = "day-cell";

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞–Ω—è—Ç–∏–π
      if (scheduleData[time] && scheduleData[time][day]) {
        console.log(
          `üìÖ ${dayNames[day]} ${time}: –Ω–∞–π–¥–µ–Ω–æ ${scheduleData[time][day].length} –∑–∞–Ω—è—Ç–∏–π`
        );

        const filteredClasses = scheduleData[time][day].filter((classItem) =>
          matchesFilters(classItem, time, day)
        );

        console.log(`‚úÖ –ü–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: ${filteredClasses.length} –∑–∞–Ω—è—Ç–∏–π`);

        filteredClasses.forEach((classItem) => {
          console.log(`üéØ –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è:`, classItem);
          const classElement = document.createElement("div");
          classElement.innerHTML = createClassItem(classItem, time, day);
          dayCell.appendChild(classElement.firstChild);
        });
      } else {
        // –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç—É—é —è—á–µ–π–∫—É
        const emptyDiv = document.createElement("div");
        emptyDiv.className = "empty-cell";
        emptyDiv.textContent = "‚Äî";
        dayCell.appendChild(emptyDiv);
      }

      row.appendChild(dayCell);
    }

    tbody.appendChild(row);
  });

  table.appendChild(tbody);
  scheduleContainer.appendChild(table);

  console.log("‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ DOM");
}
// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
function renderMobileSchedule() {
  const scheduleContainer = document.getElementById("schedule");
  scheduleContainer.innerHTML = "";

  dayNames.forEach((day, dayIndex) => {
    // –°–æ–∑–¥–∞–µ–º –±–ª–æ–∫ –¥–Ω—è
    const dayBlock = document.createElement("div");
    dayBlock.className = "mobile-day-block";

    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–Ω—è
    const dayHeader = document.createElement("div");
    dayHeader.className = "mobile-day-header";
    dayHeader.onclick = () => toggleMobileDay(dayIndex);

    const isCollapsed = collapsedMobileDays.has(dayIndex);
    dayHeader.innerHTML = `
      <span class="mobile-day-name">${day}</span>
      <span class="mobile-day-toggle ${
        isCollapsed ? "collapsed" : ""
      }"">‚ñº</span>
      <span class="mobile-day-count">${countDayClasses(dayIndex)}</span>
    `;

    dayBlock.appendChild(dayHeader);

    // –ö–æ–Ω—Ç–µ–Ω—Ç –¥–Ω—è
    const dayContent = document.createElement("div");
    dayContent.className = `mobile-day-content ${
      isCollapsed ? "collapsed" : ""
    }`;

    timeSlots.forEach((time) => {
      if (scheduleData[time] && scheduleData[time][dayIndex]) {
        const filteredClasses = scheduleData[time][dayIndex].filter(
          (classItem) => matchesFilters(classItem, time, dayIndex)
        );

        if (filteredClasses.length > 0) {
          const timeBlock = document.createElement("div");
          timeBlock.className = "mobile-time-block";

          const timeHeader = document.createElement("div");
          timeHeader.className = "mobile-time-header";
          timeHeader.textContent = time;
          timeBlock.appendChild(timeHeader);

          filteredClasses.forEach((classItem) => {
            const classElement = document.createElement("div");
            classElement.innerHTML = createClassItem(classItem, time, dayIndex);
            timeBlock.appendChild(classElement.firstChild);
          });

          dayContent.appendChild(timeBlock);
        }
      }
    });

    dayBlock.appendChild(dayContent);
    scheduleContainer.appendChild(dayBlock);
  });
}

// –ü–æ–¥—Å—á–µ—Ç –∑–∞–Ω—è—Ç–∏–π –≤ –¥–Ω–µ (–¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏)
function countDayClasses(dayIndex) {
  let count = 0;
  timeSlots.forEach((time) => {
    if (scheduleData[time] && scheduleData[time][dayIndex]) {
      count += scheduleData[time][dayIndex].filter((classItem) =>
        matchesFilters(classItem, time, dayIndex)
      ).length;
    }
  });
  return count;
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –¥–Ω—è –≤ –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏
function toggleMobileDay(dayIndex) {
  const toggle = document.querySelector(
    `.mobile-day-block:nth-child(${dayIndex + 1}) .mobile-day-toggle`
  );
  const content = document.querySelector(
    `.mobile-day-block:nth-child(${dayIndex + 1}) .mobile-day-content`
  );

  if (collapsedMobileDays.has(dayIndex)) {
    collapsedMobileDays.delete(dayIndex);
    toggle.classList.remove("collapsed");
    content.classList.remove("collapsed");
  } else {
    collapsedMobileDays.add(dayIndex);
    toggle.classList.add("collapsed");
    content.classList.add("collapsed");
  }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º –∞–¥–º–∏–Ω–∞
function updateStats() {
  let totalClasses = 0;

  Object.keys(scheduleData).forEach((time) => {
    Object.keys(scheduleData[time]).forEach((day) => {
      totalClasses += scheduleData[time][day].filter((cls) =>
        matchesFilters(cls, time, parseInt(day))
      ).length;
    });
  });

  // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
  let activeFiltersCount = 0;
  if (activeFilters.showMyGroupsOnly) activeFiltersCount++;
  activeFiltersCount += activeFilters.teachers.size;
  activeFiltersCount += activeFilters.levels.size;
  activeFiltersCount += activeFilters.types.size;
  activeFiltersCount += activeFilters.locations.size;

  // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –µ—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
  let userInfo = "";
  if (currentUser && userProfile) {
    userInfo = ` | <span style="color: #27ae60;">üë§ ${
      userProfile.full_name || currentUser.email
    }</span>`;

    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if (isAdmin()) {
      userInfo += ` <span class="admin-indicator">–ê–î–ú–ò–ù</span>`;
    }
  }

  document.getElementById("stats").innerHTML = `
    <span style="color: #f39c12;">üìä –ü–æ–∫–∞–∑–∞–Ω–æ –∑–∞–Ω—è—Ç–∏–π:</span> <strong>${totalClasses}</strong> | 
    <span style="color: #f39c12;">üéØ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤:</span> <strong>${activeFiltersCount}</strong>${userInfo}
  `;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–ª–∞–≤–∞—é—â–µ–π –∫–Ω–æ–ø–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
function updateFilterFab() {
  const filterFab = document.getElementById("filter-fab");
  if (!filterFab) return;

  let activeFiltersCount = 0;
  if (activeFilters.showMyGroupsOnly) activeFiltersCount++;
  activeFiltersCount += activeFilters.teachers.size;
  activeFiltersCount += activeFilters.levels.size;
  activeFilters.types.size;
  activeFiltersCount += activeFilters.locations.size;

  const badge = filterFab.querySelector(".filter-fab-badge");
  if (activeFiltersCount > 0) {
    badge.textContent = activeFiltersCount;
    badge.style.display = "block";
    filterFab.classList.add("has-filters");
  } else {
    badge.style.display = "none";
    filterFab.classList.remove("has-filters");
  }
}

// –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π –∑–∞–Ω—è—Ç–∏—è
function showClassDetails(name, level, teacher, location) {
  const modal = document.getElementById("class-details-modal");
  const content = document.getElementById("class-details-content");

  content.innerHTML = `
    <h3>${name}</h3>
    <p><strong>–£—Ä–æ–≤–µ–Ω—å:</strong> ${level}</p>
    <p><strong>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å:</strong> ${teacher}</p>
    <p><strong>–õ–æ–∫–∞—Ü–∏—è:</strong> ${locationNames[location] || location}</p>
  `;

  modal.style.display = "block";
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–µ—Ç–∞–ª–µ–π
function closeClassDetails() {
  document.getElementById("class-details-modal").style.display = "none";
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤
function toggleFilterGroup(groupId) {
  const options = document.getElementById(groupId);
  const toggle = document.querySelector(
    `[onclick="toggleFilterGroup('${groupId}')"] .filter-toggle`
  );

  if (openFilterGroups.has(groupId)) {
    openFilterGroups.delete(groupId);
    options.classList.add("collapsed");
    toggle.classList.add("collapsed");
  } else {
    openFilterGroups.add(groupId);
    options.classList.remove("collapsed");
    toggle.classList.remove("collapsed");
  }
}

// –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
function clearAllFilters() {
  // –û—á–∏—â–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
  activeFilters.teachers.clear();
  activeFilters.levels.clear();
  activeFilters.types.clear();
  activeFilters.locations.clear();
  activeFilters.showMyGroupsOnly = false;

  // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
  document.querySelectorAll(".filter-button").forEach((button) => {
    button.classList.remove("active");
  });

  renderFilteredSchedule();
  updateStats();
  updateFilterFab();
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
function toggleMobileFilters() {
  const filtersPanel = document.getElementById("filters");
  const filterFab = document.getElementById("filter-fab");

  if (filtersPanel.classList.contains("mobile-open")) {
    filtersPanel.classList.remove("mobile-open");
    filterFab.classList.remove("filters-open");
  } else {
    filtersPanel.classList.add("mobile-open");
    filterFab.classList.add("filters-open");
  }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function initializeApp() {
  console.log("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è MaxDance v2.0...");

  // –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  let authInitialized = false;
  let attempts = 0;

  while (!authInitialized && attempts < 50) {
    if (typeof currentUser !== "undefined") {
      authInitialized = true;
    } else {
      await new Promise((resolve) => setTimeout(resolve, 100));
      attempts++;
    }
  }

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  await loadData();

  const { teachers, levels, types, locations } = extractAllData();

  // –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
  createFilterButtons(
    document.getElementById("teacherFilters"),
    teachers,
    "teachers"
  );

  // –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ —É—Ä–æ–≤–Ω–µ–π —Å –∂–µ—Å—Ç–∫–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º
  const levelContainer = document.getElementById("levelFilters");
  levelContainer.innerHTML = "";
  const fixedOrder = [
    "–ù–∞–±–æ—Ä",
    "–ù–∞—á–∏–Ω–∞—é—â–∏–µ",
    "–ü—Ä–æ–¥–æ–ª–∂–∞—é—â–∏–µ",
    "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ",
    "–î–µ—Ç–∏",
  ];

  fixedOrder.forEach((level) => {
    if (levels.has(level)) {
      const button = document.createElement("button");
      button.className = "filter-button";
      button.textContent = level;
      button.onclick = () => toggleFilter("levels", level, button);
      levelContainer.appendChild(button);
    }
  });

  // –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ —Ç–∏–ø–æ–≤ —Å —á–∏—Ç–∞–µ–º—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ (—Å –∏—Å–∫–ª—é—á–µ–Ω–∏—è–º–∏)
  const typeButtons = document.getElementById("typeFilters");
  typeButtons.innerHTML = "";

  // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–∏–ø—ã, –∏—Å–∫–ª—é—á–∞—è –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–µ
  const filteredTypes = [...types].filter(
    (type) => !excludedTypes.includes(type)
  );

  filteredTypes.sort().forEach((type) => {
    const button = document.createElement("button");
    button.className = "filter-button";
    button.textContent = typeNames[type] || type;
    button.onclick = () => toggleFilter("types", type, button);
    typeButtons.appendChild(button);
  });

  // –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ª–æ–∫–∞—Ü–∏–π —Å —á–∏—Ç–∞–µ–º—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
  const locationButtons = document.getElementById("locationFilters");
  locationButtons.innerHTML = "";
  [...locations].sort().forEach((location) => {
    const button = document.createElement("button");
    button.className = "filter-button";
    button.textContent = locationNames[location] || location;
    button.onclick = () => toggleFilter("locations", location, button);
    locationButtons.appendChild(button);
  });

  // –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ "–ú–æ–∏ –≥—Ä—É–ø–ø—ã"
  createMyGroupsControls();

  // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ —Å–µ–∫—Ü–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ —Å–≤–µ—Ä–Ω—É—Ç—ã, –∫—Ä–æ–º–µ "–ú–æ–∏ –≥—Ä—É–ø–ø—ã"
  ["teacherFilters", "levelFilters", "typeFilters", "locationFilters"].forEach(
    (groupId) => {
      const options = document.getElementById(groupId);
      const toggle = document.querySelector(
        `[onclick="toggleFilterGroup('${groupId}')"] .filter-toggle`
      );
      if (options && toggle) {
        options.classList.add("collapsed");
        toggle.classList.add("collapsed");
      }
    }
  );

  // –§–∏–ª—å—Ç—Ä "–ú–æ–∏ –≥—Ä—É–ø–ø—ã" –æ—Ç–∫—Ä—ã—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  openFilterGroups.add("myGroupsFilters");

  // –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∞
  renderFilteredSchedule();
  updateStats();
  updateFilterFab();

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
  window.addEventListener("resize", () => {
    renderFilteredSchedule();
  });

  console.log("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MaxDance –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");

  // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–∞—Ç—É—Å–µ
  if (currentUser) {
    const status = isAdmin() ? "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" : "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";
    console.log(
      `üë§ ${status}: ${userProfile?.full_name || currentUser.email}, –≥—Ä—É–ø–ø: ${
        myGroups.size
      }`
    );
  } else {
    console.log(`üìÇ –ì–æ—Å—Ç–µ–≤–æ–π —Ä–µ–∂–∏–º, –≥—Ä—É–ø–ø –∑–∞–≥—Ä—É–∂–µ–Ω–æ: ${myGroups.size}`);
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤—ã—Ö –∞–¥–º–∏–Ω–æ–≤
  if (isAdmin() && myGroups.size === 0) {
    setTimeout(() => {
      showNotification(
        "üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å MaxDance! –û—Ç–∫—Ä–æ–π—Ç–µ ‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º.",
        "info",
        5000
      );
    }, 2000);
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
function checkSystemStatus() {
  const status = {
    authenticated: !!currentUser,
    isAdmin: isAdmin(),
    userProfile: userProfile,
    myGroupsCount: myGroups.size,
    scheduleDataLoaded: Object.keys(scheduleData).length > 0,
    timeSlots: timeSlots.length,
    functions: {
      showPersonalSchedule: typeof showPersonalSchedule === "function",
      showAdminPanel: typeof showAdminPanel === "function",
      loadScheduleFromDatabase: typeof loadScheduleFromDatabase === "function",
    },
  };

  console.table(status);
  return status;
}

// === –ó–ê–ì–õ–£–®–ö–ò –î–õ–Ø –ë–£–î–£–©–ò–• –§–£–ù–ö–¶–ò–ô ===

function showAddClassForm() {
  showNotification("üöß –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!", "info");
}

function editScheduleClassAdmin(id) {
  showNotification(
    `üöß –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è ID ${id} - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!`,
    "info"
  );
}

function deleteScheduleClassAdmin(id) {
  showNotification(`üöß –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è ID ${id} - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!`, "info");
}

function toggleScheduleClassStatus(id, newStatus) {
  showNotification(
    `üöß –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–Ω—è—Ç–∏—è ID ${id} - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!`,
    "info"
  );
}

function filterAdminSchedule() {
  // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –Ω–æ–≤—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
  const container = document.querySelector(".admin-schedule-table-container");
  if (container) {
    container.innerHTML = renderScheduleTable();
  }
}

function showAddClassTypeForm() {
  showNotification("üöß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –∑–∞–Ω—è—Ç–∏—è - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!", "info");
}

function showAddLocationForm() {
  showNotification("üöß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!", "info");
}

function showAddTeacherForm() {
  showNotification("üöß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!", "info");
}

function refreshSystemData() {
  showNotification("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º—ã...", "info");
  setTimeout(async () => {
    await reloadScheduleWithAuth();
    showNotification("‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã!", "success");
  }, 2000);
}

function exportSchedule(format) {
  showNotification(
    `üöß –≠–∫—Å–ø–æ—Ä—Ç –≤ ${format.toUpperCase()} - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!`,
    "info"
  );
}

function manageAdmins() {
  showNotification("üöß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!", "info");
}

function cleanupInactiveData() {
  if (confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ?")) {
    showNotification("üöß –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!", "info");
  }
}

// === –≠–ö–°–ü–û–†–¢ –§–£–ù–ö–¶–ò–ô –í –ì–õ–û–ë–ê–õ–¨–ù–£–Æ –û–ë–õ–ê–°–¢–¨ –í–ò–î–ò–ú–û–°–¢–ò ===

// –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
window.addToPersonalSchedule = addToPersonalSchedule;
window.editScheduleClassQuick = editScheduleClassQuick;
window.deleteScheduleClassQuick = deleteScheduleClassQuick;
window.checkSystemStatus = checkSystemStatus;

// –§—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
window.showPersonalSchedule = showPersonalSchedule;
window.closePersonalSchedule = closePersonalSchedule;
window.switchPersonalTab = switchPersonalTab;
window.savePersonalClass = savePersonalClass;
window.editPersonalClass = editPersonalClass;
window.deletePersonalClass = deletePersonalClass;
window.cancelEditPersonalClass = cancelEditPersonalClass;

// –§—É–Ω–∫—Ü–∏–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
window.showAdminPanel = showAdminPanel;
window.closeAdminPanel = closeAdminPanel;
window.switchAdminTab = switchAdminTab;
window.switchReferenceTab = switchReferenceTab;
window.filterAdminSchedule = filterAdminSchedule;
window.showAddClassForm = showAddClassForm;
window.editScheduleClassAdmin = editScheduleClassAdmin;
window.deleteScheduleClassAdmin = deleteScheduleClassAdmin;
window.toggleScheduleClassStatus = toggleScheduleClassStatus;
window.showAddClassTypeForm = showAddClassTypeForm;
window.showAddLocationForm = showAddLocationForm;
window.showAddTeacherForm = showAddTeacherForm;
window.refreshSystemData = refreshSystemData;
window.exportSchedule = exportSchedule;
window.manageAdmins = manageAdmins;
window.cleanupInactiveData = cleanupInactiveData;

// –§—É–Ω–∫—Ü–∏–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
window.showNotification = showNotification;
window.showClassDetails = showClassDetails;
window.closeClassDetails = closeClassDetails;
window.toggleFilterGroup = toggleFilterGroup;
window.clearAllFilters = clearAllFilters;
window.toggleMobileFilters = toggleMobileFilters;
window.toggleMobileDay = toggleMobileDay;

// === –§–£–ù–ö–¶–ò–ò "–ú–û–ò –ì–†–£–ü–ü–´" (–ü–†–û–î–û–õ–ñ–ï–ù–ò–ï) ===

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–∏—Ö –≥—Ä—É–ø–ø
function toggleMyGroupsEditMode() {
  isSelectMode = !isSelectMode;

  if (isSelectMode) {
    // –í—Ö–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º –≤—ã–±–æ—Ä–∞
    tempSelectedGroups = new Set([...myGroups]);
    showMyGroupsInstructions();

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    const container = document.getElementById("myGroupsFilters");
    const controlsDiv = document.createElement("div");
    controlsDiv.className = "my-groups-controls";
    controlsDiv.innerHTML = `
      <button class="filter-button save-groups-btn" onclick="saveMyGroupsSelection()">
        üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—ã–±–æ—Ä
      </button>
      <button class="filter-button cancel-groups-btn" onclick="cancelMyGroupsSelection()">
        ‚ùå –û—Ç–º–µ–Ω–∞
      </button>
    `;
    container.appendChild(controlsDiv);
  } else {
    // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ä–µ–∂–∏–º–∞ –≤—ã–±–æ—Ä–∞
    tempSelectedGroups.clear();
    hideMyGroupsInstructions();

    // –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    const controls = document.querySelector(".my-groups-controls");
    if (controls) {
      controls.remove();
    }
  }

  renderFilteredSchedule();
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function handleMyGroupsSelection(classData, time, day, element) {
  if (!isSelectMode) return;

  const classKey = getClassKey(classData, time, day);

  if (tempSelectedGroups.has(classKey)) {
    tempSelectedGroups.delete(classKey);
    element.classList.remove("selected-group");
  } else {
    tempSelectedGroups.add(classKey);
    element.classList.add("selected-group");
  }

  updateMyGroupsInstructions();
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –º–æ–∏—Ö –≥—Ä—É–ø–ø
async function saveMyGroupsSelection() {
  try {
    myGroups = new Set([...tempSelectedGroups]);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    if (currentUser) {
      await saveUserGroups([...myGroups]);
      showNotification(`‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${myGroups.size} –≥—Ä—É–ø–ø!`, "success");
    } else {
      showNotification(`üíæ –í—ã–±—Ä–∞–Ω–æ ${myGroups.size} –≥—Ä—É–ø–ø (–ª–æ–∫–∞–ª—å–Ω–æ)`, "info");
    }

    // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ä–µ–∂–∏–º–∞ –≤—ã–±–æ—Ä–∞
    toggleMyGroupsEditMode();

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    createMyGroupsControls();
    renderFilteredSchedule();
    updateStats();
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≥—Ä—É–ø–ø:", error);
    showNotification("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≥—Ä—É–ø–ø: " + error.message, "error");
  }
}

// –û—Ç–º–µ–Ω–∞ –≤—ã–±–æ—Ä–∞ –º–æ–∏—Ö –≥—Ä—É–ø–ø
function cancelMyGroupsSelection() {
  tempSelectedGroups.clear();
  toggleMyGroupsEditMode();
  renderFilteredSchedule();
}

// –ü–æ–∫–∞–∑ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è —Ä–µ–∂–∏–º–∞ –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø
function showMyGroupsInstructions() {
  const container = document.getElementById("myGroupsFilters");

  let instructions = document.getElementById("my-groups-instructions");
  if (!instructions) {
    instructions = document.createElement("div");
    instructions.id = "my-groups-instructions";
    instructions.className = "my-groups-instructions";
    container.appendChild(instructions);
  }

  updateMyGroupsInstructions();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
function updateMyGroupsInstructions() {
  const instructions = document.getElementById("my-groups-instructions");
  if (instructions) {
    instructions.innerHTML = `
      <div class="instructions-text">
        üìù –†–µ–∂–∏–º –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø –∞–∫—Ç–∏–≤–µ–Ω<br>
        –ù–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∑–∞–Ω—è—Ç–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è<br>
        <strong>–í—ã–±—Ä–∞–Ω–æ: ${tempSelectedGroups.size} –≥—Ä—É–ø–ø</strong>
      </div>
    `;
  }
}

// –°–∫—Ä—ã—Ç–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
function hideMyGroupsInstructions() {
  const instructions = document.getElementById("my-groups-instructions");
  if (instructions) {
    instructions.remove();
  }
}

// –ë—ã—Å—Ç—Ä–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π –≤ –º–æ–∏ –≥—Ä—É–ø–ø—ã
function addAllFilteredToMyGroups() {
  if (!isSelectMode) {
    toggleMyGroupsEditMode();
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è
  Object.keys(scheduleData).forEach((time) => {
    Object.keys(scheduleData[time]).forEach((day) => {
      scheduleData[time][day].forEach((classItem) => {
        if (matchesFilters(classItem, time, parseInt(day))) {
          const classKey = getClassKey(classItem, time, day);
          tempSelectedGroups.add(classKey);
        }
      });
    });
  });

  renderFilteredSchedule();
  updateMyGroupsInstructions();
  showNotification(
    `–î–æ–±–∞–≤–ª–µ–Ω–æ ${tempSelectedGroups.size} –∑–∞–Ω—è—Ç–∏–π –¥–ª—è –≤—ã–±–æ—Ä–∞`,
    "info"
  );
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π "–ú–æ–∏ –≥—Ä—É–ø–ø—ã"
window.toggleMyGroupsEditMode = toggleMyGroupsEditMode;
window.handleMyGroupsSelection = handleMyGroupsSelection;
window.saveMyGroupsSelection = saveMyGroupsSelection;
window.cancelMyGroupsSelection = cancelMyGroupsSelection;
window.addAllFilteredToMyGroups = addAllFilteredToMyGroups;

// === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô ===

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –∏—Ö –æ–±–ª–∞—Å—Ç–∏
document.addEventListener("click", function (event) {
  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–µ—Ç–∞–ª–µ–π –∑–∞–Ω—è—Ç–∏—è
  const classModal = document.getElementById("class-details-modal");
  if (classModal && event.target === classModal) {
    closeClassDetails();
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
  const personalModal = document.getElementById("personal-schedule-modal");
  if (personalModal && event.target === personalModal) {
    closePersonalSchedule();
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
  const adminModal = document.getElementById("admin-panel-modal");
  if (adminModal && event.target === adminModal) {
    closeAdminPanel();
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏—à Escape –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
document.addEventListener("keydown", function (event) {
  if (event.key === "Escape") {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ª—é–±–æ–µ –æ—Ç–∫—Ä—ã—Ç–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    closeClassDetails();
    closePersonalSchedule();
    closeAdminPanel();

    // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ä–µ–∂–∏–º–∞ –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø
    if (isSelectMode) {
      cancelMyGroupsSelection();
    }
  }
});

// === –°–õ–£–ñ–ï–ë–ù–´–ï –§–£–ù–ö–¶–ò–ò ===

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
async function safeAsync(asyncFn, errorMessage = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞") {
  try {
    return await asyncFn();
  } catch (error) {
    console.error(`‚ùå ${errorMessage}:`, error);
    showNotification(`${errorMessage}: ${error.message}`, "error");
    throw error;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
function formatTime(timeString) {
  try {
    const [hours, minutes] = timeString.split(":");
    return `${hours.padStart(2, "0")}:${minutes.padStart(2, "0")}`;
  } catch {
    return timeString;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã
function formatDate(date) {
  if (!date) return "";

  try {
    if (typeof date === "string") {
      date = new Date(date);
    }
    return date.toLocaleDateString("ru-RU");
  } catch {
    return date.toString();
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ —Ç–∏–ø–∞ –∑–∞–Ω—è—Ç–∏—è
function getTypeColor(type) {
  const colors = {
    bachata: "#e74c3c",
    salsa: "#f39c12",
    kizomba: "#9b59b6",
    zouk: "#3498db",
    reggaeton: "#e67e22",
    "lady-style": "#e91e63",
    stretching: "#27ae60",
    personal: "#34495e",
    practice: "#95a5a6",
  };

  return colors[type] || "#f39c12";
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ —Ç–∏–ø–∞ –∑–∞–Ω—è—Ç–∏—è
function getTypeIcon(type) {
  const icons = {
    bachata: "üíÉ",
    salsa: "üï∫",
    kizomba: "üíï",
    zouk: "üéµ",
    reggaeton: "üî•",
    "lady-style": "üëë",
    stretching: "üßò‚Äç‚ôÄÔ∏è",
    personal: "üë§",
    practice: "üéØ",
  };

  return icons[type] || "üíÉ";
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–±–∞—É–Ω—Å–∞ (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —á–∞—Å—Ç–æ—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è)
function debounce(func, wait) {
  let timeout;
  return function executedFunction(...args) {
    const later = () => {
      clearTimeout(timeout);
      func(...args);
    };
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
  };
}

// –î–µ–±–∞—É–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ (–¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏)
const debouncedRender = debounce(renderFilteredSchedule, 100);

// === –≠–ö–°–ü–û–†–¢ –°–õ–£–ñ–ï–ë–ù–´–• –§–£–ù–ö–¶–ò–ô ===

window.safeAsync = safeAsync;
window.formatTime = formatTime;
window.formatDate = formatDate;
window.getTypeColor = getTypeColor;
window.getTypeIcon = getTypeIcon;
window.debounce = debounce;
window.debouncedRender = debouncedRender;
window.debugScheduleData = debugScheduleData;

// === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ===

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener("DOMContentLoaded", initializeApp);

// === –ö–û–ù–ï–¶ –§–ê–ô–õ–ê ===
console.log("üì¶ basefucs.js –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!");
